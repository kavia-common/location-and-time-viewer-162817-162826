{"is_source_file": true, "format": "Kotlin", "description": "Source Kotlin file defining MainViewModel class in an Android app. It manages location fetching, time computation, and UI state updates, including permission checks, reverse geocoding, and time zone resolution.", "external_files": ["android.app.Application", "android.content.Context", "android.content.pm.PackageManager", "android.location.Geocoder", "android.os.Build", "androidx.core.content.ContextCompat", "androidx.lifecycle.AndroidViewModel", "androidx.lifecycle.ViewModel", "androidx.lifecycle.ViewModelProvider", "androidx.lifecycle.viewModelScope", "kotlinx.coroutines.CoroutineDispatcher", "kotlinx.coroutines.Dispatchers", "kotlinx.coroutines.flow.MutableStateFlow", "kotlinx.coroutines.flow.asStateFlow", "kotlinx.coroutines.launch", "java.time.Instant", "java.time.ZoneId", "java.time.ZonedDateTime", "java.time.format.DateTimeFormatter", "java.util.Locale"], "external_methods": ["ContextCompat.checkSelfPermission", "Geocoder.getFromLocation", "ZoneId.of", "java.util.TimeZone.getTimeZone"], "published": ["MainViewModel", "UiState", "factory"], "classes": [{"name": "UiState", "description": "Data class representing the UI state with loading status, location, local time, and message."}, {"name": "MainViewModel", "description": "ViewModel class responsible for managing location and time data, updating UI state, and handling permissions and geocoding."}], "methods": [{"name": "hasLocationPermission", "description": "Checks if the app has either fine or coarse location permission."}, {"name": "onPermissionDenied", "description": "Updates UI state to indicate permission denial."}, {"name": "refresh", "description": "Fetches current location and computes local time, updating the UI state accordingly."}, {"name": "clearMessage", "description": "Clears any message in the UI state."}, {"name": "formatLocationText", "description": "Converts location coordinates into a human-readable address or fallback string."}, {"name": "resolveZoneId", "description": "Attempts to determine a time zone ID based on location coordinates, using API-based (API 34+) or heuristic methods."}, {"name": "factory", "description": "Provides a ViewModel provider factory for creating MainViewModel instances."}], "calls": ["ContextCompat.checkSelfPermission", "Geocoder.getFromLocation", "ZoneId.of", "TimeZone.getTimeZone", "viewModelScope.launch", "Instant.now", "ZonedDateTime.ofInstant", "ZonedDateTime.format"], "search-terms": ["MainViewModel", "locationRepo", "refresh", "resolveZoneId", "formatLocationText", "permissions", "Geocoder", "timezone", "UI state"], "state": 2, "file_id": 6, "knowledge_revision": 31, "git_revision": "", "revision_history": [{"13": ""}, {"31": ""}], "hash": "7a8a7d6c8c7c3524a1f3a592750ffca4", "format-version": 4, "code-base-name": "android_frontend", "filename": "android_frontend/app/src/main/kotlin/org/example/locationtime/MainViewModel.kt"}